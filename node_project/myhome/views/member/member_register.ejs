
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Insert title here</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- CDN  서비스-->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script><!-- DAUM 주소  -->
  
</head>
<body>
<form id="myform" name="myform">
  <input type="hidden" id="idcheckyn" name="idcheckyn" value="N">

  <%-include('../layout/header.ejs')%>

<div class="container mt-3" style ="margin-top: 80px;">

  <h1>회원가입</h1>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="아이디" name="userid" id="userid">
    <div class="input-group-append">
      <button class="btn btn-success" type="button" id="btnIdCheck">중복체크</button>  
     </div>
  </div>

  <div class="input-group mb-3">
    <input type="password" class="form-control" name="password" id="password" placeholder="페스워드">
  </div>

  <div class="input-group mb-3">
    <input type="password" class="form-control" name="password2" id="password2" placeholder="패스워드확인">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="이름" name="username" id="username">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="닉네임" name="nickname" id="nickname">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="email" name="email" id="email">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="전화번호" name="phone" id="phone">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" id="zipcode" name="zipcode" placeholder="우편번호">
    <input type="button" onclick="execDaumPostcode()" value="우편번호 찾기">
    <input type="text" class="form-control" id="address2" name="address2" placeholder="주소">
    <input type="text" class="form-control" id="extraAddress" placeholder="참고항목">
  </div>
  <div class="input-group mb-3">
    <input type="text" class="form-control" id="address1" name="address1" placeholder="상세주소">
  </div>
  
  	<div class="container" style="text-align:right">
	 	  <div class="btn-group">
	      <button type="button" class="btn btn-primary" id ="btnSave">등록</button>&nbsp;&nbsp;
        <button type="button" class="btn btn-primary" id ="btnCancel">취소</button>&nbsp;&nbsp;
	    </div>
	  </div>

</div>

</form>
</body>
</html>

<script>
  $(document).ready(()=>{
    $("#btnIdCheck").click(()=>{
      let userid = $("#userid").val(); //let 변수의 userid는 id=userid에서 입력된 값(val)

      $.ajax({
        url:"/member/idcheck",
        data:{useridA:userid}, //왼쪽은 박스명이다. 이 박스명을 member.js로 던지는거다
        method:"post",
        dataType:"json"
      }).then((result)=>{
        if(result.result == "success") //리절트 두개는 그냥 받아들여
        {
          alert("사용가능한 아이디입니다.")
          $("#idcheckyn").val("Y"); //idcheck가 되었음을 저장한다
          //다시 아이디 입력못하게 막자
          $("#userid").prop("readonly","true");
          //readonly - disable:readonly - 서버로 저장을 보낸다. disable-값도 안보낸다.
        }
        else
        {
          alert("이미 사용중인 아이디입니다.")
        }
      })
      .catch((res,status,error)=>{
        console.log(status);
      });
    })

    $("#btnSave").click(()=>{
      save();
    });

  });
  function save(){
    // data = {userid:$("#userid").val(), username:$("#username").val(,...)}
    // 폼직렬화 직렬화: 객체를 파일이나 네트워크로 전송하는 기법
    let params =$("#myform").serialize(); //파일전송시 사용 못한다.
    console.log(params);
    $.ajax({
        url:"/member/save",
        data:params,
        method:"post",
        dataType:"json"
      }).then((result)=>{
        if(result.result=="success")
        {
          alert("회원가입을 축하합니다!");
          //로그온페이지로 이동
          location.href="/member/login"; //get방식, a - anchor
        }
      })
      .catch((res,status,error)=>{
        console.log(status);
      });
  }


  function execDaumPostcode() {
        new daum.Postcode({
            oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var addr = ''; // 주소 변수
                var extraAddr = ''; // 참고항목 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                    addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }

                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
                if(data.userSelectedType === 'R'){
                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                    // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                        extraAddr += data.bname;
                    }
                    // 건물명이 있고, 공동주택일 경우 추가한다.
                    if(data.buildingName !== '' && data.apartment === 'Y'){
                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                    }
                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                    if(extraAddr !== ''){
                        extraAddr = ' (' + extraAddr + ')';
                    }
                    // 조합된 참고항목을 해당 필드에 넣는다.
                    document.getElementById("extraAddress").value = extraAddr;
                
                } else {
                    document.getElementById("extraAddress").value = '';
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById('zipcode').value = data.zonecode;
                document.getElementById("address2").value = addr;
                // 커서를 상세주소 필드로 이동한다.
                document.getElementById("address1").focus();
            }
        }).open();
    }

</script>